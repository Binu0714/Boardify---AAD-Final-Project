/**
 * This script handles all functionality for the booking request modal.
 * It runs after the HTML document has been fully loaded.
 */
document.addEventListener('DOMContentLoaded', () => {

    // --- 1. Element Selection ---
    // Find all the necessary HTML elements once and store them in variables for efficiency.
    const openPopupButton = document.getElementById('request-btn');
    const closePopupButton = document.getElementById('close-popup-btn');
    const popupOverlay = document.getElementById('popup-overlay');
    const bookingForm = document.getElementById('booking-request-form');
    const requestDateField = document.getElementById('request-date');

    /**
     * Opens the modal popup and prepares the form.
     * This function is called when the user clicks the "Request to Book" button.
     */
    const openModal = () => {
        // Set the current date in a readable format.
        const today = new Date();
        const formattedDate = today.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        }); // e.g., "September 18, 2025"
        requestDateField.value = formattedDate;

        // Add the 'active' class to the overlay. The CSS handles the fade-in animation.
        popupOverlay.classList.add('active');
    };

    /**
     * Closes the modal popup.
     * This function is called by the close button and when clicking the background.
     */
    const closeModal = () => {
        // Remove the 'active' class. The CSS handles the fade-out animation.
        popupOverlay.classList.remove('active');
    };

    /**
     * Handles the form submission process.
     * @param {Event} event - The form's submit event.
     */
    const handleFormSubmit = (event) => {
        // Prevent the default browser behavior of reloading the page on form submission.
        event.preventDefault();

        // Gather all the data from the form fields into a single object.
        const bookingData = {
            name: document.getElementById('requester-name').value,
            mobile: document.getElementById('requester-mobile').value,
            email: document.getElementById('requester-email').value,
            message: document.getElementById('requester-message').value,
            // Use ISO format for the date when sending to the backend for standardization.
            requestDate: new Date().toISOString()
        };

        // For development, log the data to the console to verify it's correct.
        console.log('Form Submitted. Data to send to backend:', bookingData);

        // --- BACKEND INTEGRATION ---
        // In a real application, you would send this data to your server here.
        // This is a placeholder to simulate the action.
        // Example: sendBookingRequest(bookingData);

        // Show a confirmation message to the user.
        alert('Request sent successfully! The property owner will be in touch with you shortly.');

        // Close the modal after a successful submission.
        closeModal();
    };


    // --- 2. Event Listeners ---
    // Connect the functions above to user actions (clicks and submits).

    // Safety Check: Only add listeners if the elements actually exist on the page.
    // This prevents errors on pages that don't have the modal.
    if (openPopupButton && closePopupButton && popupOverlay && bookingForm) {

        // When the user clicks the "Request to Book" button, open the modal.
        openPopupButton.addEventListener('click', openModal);

        // When the user clicks the 'X' button, close the modal.
        closePopupButton.addEventListener('click', closeModal);

        // When the user clicks the dark background (the overlay), close the modal.
        popupOverlay.addEventListener('click', (event) => {
            // This check ensures the click was on the overlay itself and not on the white popup box.
            if (event.target === popupOverlay) {
                closeModal();
            }
        });

        // When the user clicks the submit button inside the form, handle the submission.
        bookingForm.addEventListener('submit', handleFormSubmit);
    }

}); // End of DOMContentLoaded